R-Type                                                       T. Marchand
Request for Comments: 0                                                 
                                                            January 2018


                      		RType

Status of This Memo

   This memo defines an Experimental Protocol for the Internet          
   community.  Discussion and suggestions for improvement are requested.
   Distribution of this memo is unlimited.

Abstract

Table of Contents

   1. Commands formatting .........................................    1
   2. Client to ServerGame ........................................    2
      2.1 AUTHORIZE ...............................................    2
      2.2 FORWARD .................................................    2
      2.3 BACKWARD ................................................    2
      2.4 LEFT ....................................................    2
      2.5 RIGHT ...................................................    3
      2.6 START_MATCHMAKING .......................................    3
      2.7 STOP_MATCHMAKING ........................................    3
   3. ServerGame to Client ........................................    4
      3.1 SPAWN_PLAYER ............................................    4
      3.2 UPDATE_PLAYER ...........................................    4 
      3.3 SPAWN_ENTITY ............................................    4 
      3.4 UPDATE_ENTITY ...........................................    4 
      3.5 DELETE_ENTITY ...........................................    5 
      3.6 SERVER_FOUND ............................................    5 
   4. ServerGame to ServerAuth ....................................    6 
      4.1 REGISTER ................................................    6 
   5. ServerAuth to Client ........................................    7 
      5.1 CREATE_ROOM .............................................    7 
      5.2 LEAVE_ROOM ..............................................    7 
      5.3 ROOM_LIST ...............................................    7 
      5.4 JOIN_ROOM ...............................................    7 
      5.5 NEW_OWNER ...............................................    7 
      5.6 SET_PSEUDO ..............................................    7 
   6. ServerAuth to ServerGame ....................................    8 
      6.1 PING ....................................................    8 
      6.2 RESERVED ................................................    8 


                                                                [Page 1]

RFC 0                               RType                   January 2018

1. Commands formatting

  Each command is sent by sending a message, which is a structure
  containing :
	- a magic number
	- a type
	- a bodySize
	- a body

                                                                [Page 2]

RFC 0                               RType                   January 2018

2. Client to ServerGame

2.1 AUTHORIZE

   Command: AUTHORIZE
   Parameters: <nick> <token>
   Return: <id> <nickname> <spritename> <positionx> <positiony>
   <actualframe;x.y.width.height,width>

   The AUTHORIZE command is for use by the client for the ServerGame.
   The client must send his nickname and a token.
   The server will compare its token to its own token, and if it
   matches, will send to the client the player's information.
   It will also inform every clients that a new player is connected.
   This command isn't accessible 5 seconds after the game is started. 

2.2 FORWARD

   Command: FORWARD
   Parameters: 
   Return:

   The FORWARD command is for use by the client, and will be called
   when a player press the upper arrow key. It will set the advanced
   enum for the player.

2.3 BACKWARD

   Command: BACKWARD
   Parameters: 
   Return:

   The BACKWARD command is for use by the client, and will be called
   when a player press the down arrow key. It will set the advanced
   enum for the player.


2.4 LEFT

   Command: LEFT
   Parameters: 
   Return:

   The LEFT command is for use by the client, and will be called
   when a player press the left arrow key. It will set the advanced
   enum for the player.

                                                                [Page 3]

RFC 0                               RType                   January 2018

2.5 RIGHT

   Command: RIGHT
   Parameters: 
   Return:

   The RIGHT command is for use by the client, and will be called
   when a player press the right arrow key. It will set the advanced
   enum for the player.

2.6 START_MATCHMAKING

   Command: START_MATCHMAKING
   Parameters: 
   Return:

   The START_MATCHMAKING command is for use by the client, and will be
   send to the game server to start a game. On success, it will return
   an empty message. Else, after 4 seconds, it's an error.

2.7 STOP_MATCHMAKING

   Command: STOP_MATCHMAKING
   Parameters: 
   Return: 
   The STOP_MATCHMAKING command is for use by the client, and will be
   send to the game server to stop the matchmaking. On success, it will
   return an empty message. Else, after 4 seconds, it's an error.

                                                                [Page 4]

RFC 0                               RType                   January 2018

3. ServerGame to Client

3.1 SPAWN_PLAYER

   Command: SPAWN_PLAYER
   Parameters: <id> <nickname> <spritename> <positionx> <positiony>
   <actualframe;x.y.width.height,width>
   Return:

   The SPAWN_PLAYER command is for use by the server, and will be
   called when a new player is connected to the game (by the
   AUTHORIZE command).

3.2 UPDATE_PLAYER

   Command: UPDATE_PLAYER
   Parameters:
   Return: <id> <positionx> <positiony> <actualframe>

   The UPDATE_PLAYER command is for use by the game server, and will
   be send to the client when a player moves.

3.3 SPAWN_ENTITY

   Command: SPAWN_ENTITY
   Parameters:
   Return: <id> <rotation> <positionx> <positiony> <actualframe>
   <sprite>

   The SPAWN_ENTITY command is for use by the game server, and will
   be send to the client when an entity appears.

3.4 UPDATE_ENTITY

   Command: UPDATE_ENTITY
   Parameters:
   Return: <id> <rotation> <positionx> <positiony> <actualframe>

   The UPDATE_ENTITY command is for use by the game server, and will
   be send to the client when an entity moves.

                                                                [Page 5]

RFC 0                               RType                   January 2018

3.5 DELETE_ENTITY

   Command: DELETE_ENTITY
   Parameters:
   Return: <id>

   The DELETE_ENTITY command is for use by the game server, and will
   be send to the client when an entity is deleted.

3.6 SERVER_FOUND

   Command: SERVER_FOUND
   Parameters: 
   Return: <ipserver> <port> <token>

   The SERVER_FOUND command is for use by the game server, and will be
   send to the client when the matchmaking thread is finished.


                                                                [Page 6]

RFC 0                               RType                   January 2018

4. ServerGame to ServerAuth

4.1 REGISTER

   Command: REGISTER
   Parameters: <port>
   Return: <token>

   The REGISTER command is for use by the game server, and will be
   send to the auth server to get a token for a specific port (the
   one used in AUTHORIZE).



                                                                [Page 7]

RFC 0                               RType                   January 2018

5. ServerAuth to Client

5.1 CREATE_ROOM

   Command: CREATE_ROOM
   Parameters:
   Return: <id>

   The CREATE_ROOM command is for use by the auth server, and will be
   send to the client to create a new room.

5.2 LEAVE_ROOM

   Command: LEAVE_ROOM
   Parameters: 
   Return: 

   The LEAVE_ROOM command is for use by the auth server, and will be
   send to the client to leave its room.

5.3 ROOM_LIST

   Command: ROOM_LIST
   Parameters: 
   Return: <roomid> <user1> <user2> ...

   The PING command is for use by the auth server, and will be
   send to the client to inform it of the actual rooms.

5.4 JOIN_ROOM

   Command: JOIN_ROOM
   Parameters: <id room>
   Return: SUCCESS / FAILURE

   The JOIN_ROOM command is for use by the auth server, and will be
   send to the client to join a room.

5.5 NEW_OWNER

   Command: NEW_OWNER
   Parameters: 
   Return:

   The NEW_OWNER command is for use by the auth server, and will be
   send to the client after the owner of the room has left. It will
   randomly assign the ownership to a connected player in this room.

5.6 SET_PSEUDO

   Command: SET_PSEUDO
   Parameters: <nickname>
   Return: SUCCESS / FAILURE

   The START_MATCHMAKING command is for use by the client, and will be
   send to the auth server to change its nickname.


                                                                [Page 8]

RFC 0                               RType                   January 2018

6. ServerAuth to ServerGame

6.1 PING

   Command: PING
   Parameters: 
   Return: AVAILABLE / RESERVED / BUSY

   The PING command is for use by the auth server, and will be
   send to the server to know about its disponibility.

6.2 RESERVED

   Command: RESERVED
   Parameters: <port>
   Return:

   The RESERVED command is for use by the auth server, and will be
   send to the server to start the game : it will listen on the
   port for 5 seconds, and then start the game.
